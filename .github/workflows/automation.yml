name: Run tests

on:
  workflow_call:
    inputs:
      package:
        description: api | ui
        required: true
        type: string

jobs:
  validate-checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      # Pick Maven wrapper if fully present, otherwise install Maven and use `mvn`
      - name: Choose Maven (wrapper or system)
        run: |
          set -e
          if [ -f mvnw ] && [ -f .mvn/wrapper/maven-wrapper.jar ] && [ -f .mvn/wrapper/maven-wrapper.properties ]; then
            # normalize line endings & permissions just in case
            sed -i 's/\r$//' mvnw || true
            chmod +x mvnw || true
            echo "MVN_CMD=./mvnw" >> "$GITHUB_ENV"
          else
            echo "Maven Wrapper not found or incomplete. Installing Maven..."
            sudo apt-get update
            sudo apt-get install -y maven
            echo "MVN_CMD=mvn" >> "$GITHUB_ENV"
          fi
          $MVN_CMD -v

      - name: Validate Checkstyle
        run: ${{ env.MVN_CMD }} -B validate

  run-tests:
    needs: validate-checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      # Repeat the same chooser (env doesnâ€™t persist across jobs)
      - name: Choose Maven (wrapper or system)
        run: |
          set -e
          if [ -f mvnw ] && [ -f .mvn/wrapper/maven-wrapper.jar ] && [ -f .mvn/wrapper/maven-wrapper.properties ]; then
            sed -i 's/\r$//' mvnw || true
            chmod +x mvnw || true
            echo "MVN_CMD=./mvnw" >> "$GITHUB_ENV"
          else
            echo "Maven Wrapper not found or incomplete. Installing Maven..."
            sudo apt-get update
            sudo apt-get install -y maven
            echo "MVN_CMD=mvn" >> "$GITHUB_ENV"
          fi
          $MVN_CMD -v

      - name: TeamCity Setup
        uses: ./.github/actions/teamcity-setup

      - name: Run tests
        continue-on-error: true
        # Run only tests for the chosen package (api|ui)
        run: ${{ env.MVN_CMD }} -B test -Dtest="com.example.teamcity.${{ inputs.package }}.**" -Dgroups=Regression
