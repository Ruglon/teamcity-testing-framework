name: Automation Workflow (Reusable)

on:
  workflow_call:
    inputs:
      package:
        description: 'Package to test (e.g., api or ui)'
        required: true
        default: 'api'
        type: string
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to test (e.g., api or ui)'
        required: true
        default: 'api'
        type: string

jobs:
  run-automation:
    runs-on: ubuntu-latest
    if: ${{ inputs.package == 'api' || inputs.package == 'ui' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Teamcity Environment
        uses: ./.github/actions/Teamcity-Setup

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Match Teamcity Setup
          distribution: 'zulu'

      - name: Build with Maven
        run: mvn clean test
        env:
          HOST: ${{ env.HOST }}
          SUPER_USER_TOKEN: ${{ env.SUPER_USER_TOKEN }}

      - name: Check Coverage Output
        run: |
          mkdir -p target/swagger-coverage-output
          if [ ! "$(ls -A target/swagger-coverage-output)" ]; then
            echo "No coverage data found, creating dummy file"
            echo "{}" > target/swagger-coverage-output/coverage-results.json
          fi

      - name: Run Swagger Coverage
        continue-on-error: true
        if: ${{ inputs.package == 'api' }}
        run: |
          chmod +x .swagger-coverage-commandline/bin/swagger-coverage
          .swagger-coverage-commandline/bin/swagger-coverage -s "http://${{ env.HOST }}:8111/app/rest/swagger.json" -i target/swagger-coverage-output

      - name: Save Swagger Coverage
        uses: actions/upload-artifact@v4
        if: ${{ inputs.package == 'api' }}
        with:
          name: swagger-coverage
          path: |
            target/swagger-coverage-output/swagger-coverage-report.html
            target/swagger-coverage-output/swagger-coverage-results.json

      - name: Load Test Report History
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build Test Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results
          subfolder: ${{ inputs.package }}

      - name: Publish Test Report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: gh-pages/allure-history