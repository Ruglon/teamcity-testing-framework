name: Run tests

on:
  workflow_call:
    inputs:
      package:
        description: api | ui
        required: true
        type: string

jobs:
  validate-checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      # Use wrapper if complete; else install Maven
      - name: Choose Maven (wrapper or system)
        id: mvn
        run: |
          if [ -f mvnw ] && [ -f .mvn/wrapper/maven-wrapper.jar ] && [ -f .mvn/wrapper/maven-wrapper.properties ]; then
            sed -i 's/\r$//' mvnw || true
            chmod +x mvnw || true
            echo "cmd=./mvnw" >> "$GITHUB_OUTPUT"
          else
            echo "Maven Wrapper missing/incomplete. Installing Maven..."
            sudo apt-get update
            sudo apt-get install -y maven
            echo "cmd=mvn" >> "$GITHUB_OUTPUT"
          fi
          ${{ steps.mvn.outputs.cmd }} -v

      - name: Validate Checkstyle (show violations)
        run: ${{ steps.mvn.outputs.cmd }} -B -V -e -Dcheckstyle.consoleOutput=true validate

      - name: Upload Checkstyle report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: |
            **/target/checkstyle-result.xml
            **/target/checkstyle-cachefile
          if-no-files-found: ignore

  run-tests:
    needs: validate-checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      - name: Choose Maven (wrapper or system)
        id: mvn
        run: |
          if [ -f mvnw ] && [ -f .mvn/wrapper/maven-wrapper.jar ] && [ -f .mvn/wrapper/maven-wrapper.properties ]; then
            sed -i 's/\r$//' mvnw || true
            chmod +x mvnw || true
            echo "cmd=./mvnw" >> "$GITHUB_OUTPUT"
          else
            echo "Maven Wrapper missing/incomplete. Installing Maven..."
            sudo apt-get update
            sudo apt-get install -y maven
            echo "cmd=mvn" >> "$GITHUB_OUTPUT"
          fi
          ${{ steps.mvn.outputs.cmd }} -v

      - name: TeamCity Setup
        uses: ./.github/actions/teamcity-setup

      - name: Run tests
        continue-on-error: true
        run: |
          # primary selector
          ${{ steps.mvn.outputs.cmd }} -B test -Dtest="com.example.teamcity.${{ inputs.package }}.**" -Dgroups=Regression
          # fallback (uncomment if your packages differ): 
          # ${{ steps.mvn.outputs.cmd }} -B test -Dgroups=Regression -Dincludes=**/${{ inputs.package }}/**/*Test.java
